<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.richard.dao.RoleMapper">

    <select id="findAllRole" parameterType="com.richard.domain.Role" resultType="com.richard.domain.Role">
        select * from roles
        <where>
            <if test="name != null and name != ''">
                and name=#{name}
            </if>
        </where>
    </select>
    
    <select id="findMenuByRoleId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT m.id
        from roles r
            inner join role_menu_relation rm on r.id=rm.role_id
            inner join menu m on m.id=rm.menu_id
        where r.id=#{roleId}
    </select>

    <insert id="roleContextMenu" parameterType="com.richard.domain.Role_menu_relation">
        insert into role_menu_relation values(null,#{menuId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <delete id="deleteRoleContextMenu" parameterType="java.lang.Integer">
        delete from role_menu_relation where role_id=#{rid}
    </delete>

    <delete id="deleteRole" parameterType="java.lang.Integer">
        delete from roles where id=#{rid}
    </delete>
    
    <insert id="saveRole" parameterType="com.richard.domain.Role">
        insert into roles
        values (null,#{code},#{name},#{description},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy});
    </insert>

    <update id="updateRole" parameterType="com.richard.domain.Role">
        update roles
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="code != null and code != ''">
                code = #{code},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="updatedTime != null">
                updated_time=#{updatedTime},
            </if>
        </trim>
        <where>
            <if test="id != null and id != ''">
                id=#{id}
            </if>
        </where>
    </update>

    <select id="findResourceCategoryByRoleId" parameterType="java.lang.Integer" resultType="com.richard.domain.ResourceCategory">
        select DISTINCT rc.*
        from resource_category rc
                 inner join resource r on r.category_id=rc.id
                 inner join role_resource_relation rrr on rrr.resource_id=r.id
                 inner join roles ro on ro.id=rrr.role_id
        where rrr.role_id=#{id}
    </select>

    <select id="findResourceByRoleId" parameterType="java.lang.Integer" resultType="com.richard.domain.Resource">
        select DISTINCT r.*
        from resource r
                 inner join role_resource_relation rrr on rrr.resource_id=r.id
                 inner join roles ro on ro.id=rrr.role_id
        where rrr.role_id=#{id}
    </select>

    <delete id="deleteRoleContextResource" parameterType="java.lang.Integer">
        delete from role_resource_relation where role_id=#{id}
    </delete>

    <insert id="roleContextResource" parameterType="com.richard.domain.Role_resource_relation">
        insert into role_resource_relation values (null,#{resourceId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>
</mapper>