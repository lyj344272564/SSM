<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.richard.dao.UserMapper">

    <select id="findAllUserByPage" parameterType="com.richard.domain.UserVO" resultType="com.richard.domain.User">
        select id,name,portrait,phone,password,create_time,status
        from user
        <where>
            <if test="true">
                and is_del != 1
            </if>
            <if test="username != null">
                and name = #{username}
            </if>
            <if test="startCreateTime != null and endCreateTime != null">
                and create_time BETWEEN #{startCreateTime} AND #{endCreateTime}
            </if>
        </where>
    </select>

    <update id="updateUserStatus" parameterType="com.richard.domain.User">
        update user
        set status=#{status},update_time=#{update_time}
        where id=#{id}
    </update>

    <select id="login" parameterType="com.richard.domain.User" resultType="com.richard.domain.User">
        select * from user where phone = #{phone}
    </select>

    <select id="findUserRelationRoleById" parameterType="java.lang.Integer" resultType="com.richard.domain.Role">
        SELECT * from roles r
            inner join user_role_relation ur on r.id=ur.role_id
            INNER JOIN user u ON ur.user_id = u.id
        where ur.user_id=#{id}
    </select>

    <delete id="deleteUserContextRole" parameterType="java.lang.Integer">
        delete from user_role_relation where user_id = #{userid}
    </delete>

    <insert id="userContextRole" parameterType="com.richard.domain.User_Role_relation">
        insert into user_role_relation values(null,#{userId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <select id="findParentMenuByRoleId" parameterType="java.util.List" resultType="com.richard.domain.Menu">
        select
            DISTINCT m.* from  roles r
            INNER JOIN role_menu_relation rm ON r.id = rm.role_id
            INNER JOIN menu m ON rm.menu_id = m.id
        WHERE m.parent_id = -1 AND r.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY m.id
    </select>

    <select id="findSubMenuByPid" parameterType="java.lang.Integer" resultType="com.richard.domain.Menu">
        select * from menu where parent_id=#{pid}
    </select>

    <select id="findResourceByRoleId" parameterType="java.util.List" resultType="com.richard.domain.Resource">
        select
            DISTINCT rc.*
        FROM roles r
                 INNER JOIN role_resource_relation rr ON r.id = rr.role_id
                 INNER JOIN resource rc ON rr.resource_id = rc.id
        WHERE r.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY rc.id;
    </select>

</mapper>